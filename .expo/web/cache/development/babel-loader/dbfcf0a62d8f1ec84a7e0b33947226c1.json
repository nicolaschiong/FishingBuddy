{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nicolasjameschiong/Dropbox/My Mac (Nicolass-MacBook-Pro.local)/Documents/_Personal/Development/React/FishingBuddy/components/Switch.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { theme } from \"../constants\";\nvar GRAY_COLOR = \"rgba(168, 182, 200, 0.30)\";\n\nvar SwitchInput = function (_React$PureComponent) {\n  _inherits(SwitchInput, _React$PureComponent);\n\n  var _super = _createSuper(SwitchInput);\n\n  function SwitchInput() {\n    _classCallCheck(this, SwitchInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SwitchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          props = _objectWithoutProperties(_this$props, [\"value\"]);\n\n      var thumbColor = null;\n\n      if (Platform.OS === \"android\") {\n        thumbColor = GRAY_COLOR;\n        if (props.value) thumbColor = theme.colors.secondary;\n      }\n\n      return React.createElement(Switch, _extends({\n        thumbColor: thumbColor,\n        ios_backgroundColor: GRAY_COLOR,\n        trackColor: {\n          true: theme.colors.secondary\n        },\n        value: value\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return SwitchInput;\n}(React.PureComponent);\n\nexport { SwitchInput as default };","map":{"version":3,"sources":["/Users/nicolasjameschiong/Dropbox/My Mac (Nicolass-MacBook-Pro.local)/Documents/_Personal/Development/React/FishingBuddy/components/Switch.js"],"names":["React","theme","GRAY_COLOR","SwitchInput","props","value","thumbColor","Platform","OS","colors","secondary","true","PureComponent"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,KAAT;AAEA,IAAMC,UAAU,GAAG,2BAAnB;;IAEqBC,W;;;;;;;;;;;;;6BACV;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACWD,KADX;;AAEP,UAAIE,UAAU,GAAG,IAAjB;;AAEA,UAAIC,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BF,QAAAA,UAAU,GAAGJ,UAAb;AACA,YAAIE,KAAK,CAACC,KAAV,EAAiBC,UAAU,GAAGL,KAAK,CAACQ,MAAN,CAAaC,SAA1B;AAClB;;AAED,aACE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAEJ,UADd;AAEE,QAAA,mBAAmB,EAAEJ,UAFvB;AAGE,QAAA,UAAU,EAAE;AAEVS,UAAAA,IAAI,EAAEV,KAAK,CAACQ,MAAN,CAAaC;AAFT,SAHd;AAOE,QAAA,KAAK,EAAEL;AAPT,SAQMD,KARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;;;;EAtBsCJ,KAAK,CAACY,a;;SAA1BT,W","sourcesContent":["import React from \"react\";\nimport { Switch, Platform } from \"react-native\";\n\nimport { theme } from \"../constants\";\n\nconst GRAY_COLOR = \"rgba(168, 182, 200, 0.30)\";\n\nexport default class SwitchInput extends React.PureComponent {\n  render() {\n    const { value, ...props } = this.props;\n    let thumbColor = null;\n\n    if (Platform.OS === \"android\") {\n      thumbColor = GRAY_COLOR;\n      if (props.value) thumbColor = theme.colors.secondary;\n    }\n\n    return (\n      <Switch\n        thumbColor={thumbColor}\n        ios_backgroundColor={GRAY_COLOR}\n        trackColor={{\n          // false: GRAY_COLOR,\n          true: theme.colors.secondary\n        }}\n        value={value}\n        {...props}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}