{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nicolasjameschiong/Dropbox/My Mac (Nicolass-MacBook-Pro.local)/Documents/_Personal/Development/React/FishingBuddy/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AppLoading } from \"expo\";\nimport { Asset } from \"expo-asset\";\nimport Navigation from \"./navigation\";\nimport { Block } from \"./components\";\nvar images = [require(\"./assets/icons/back.png\"), require(\"./assets/icons/plants.png\"), require(\"./assets/icons/seeds.png\"), require(\"./assets/icons/flowers.png\"), require(\"./assets/icons/sprayers.png\"), require(\"./assets/icons/pots.png\"), require(\"./assets/icons/fertilizers.png\"), require(\"./assets/images/plants_1.png\"), require(\"./assets/images/plants_2.png\"), require(\"./assets/images/plants_3.png\"), require(\"./assets/images/explore_1.png\"), require(\"./assets/images/explore_2.png\"), require(\"./assets/images/explore_3.png\"), require(\"./assets/images/explore_4.png\"), require(\"./assets/images/explore_5.png\"), require(\"./assets/images/explore_6.png\"), require(\"./assets/images/illustration_1.png\"), require(\"./assets/images/illustration_2.png\"), require(\"./assets/images/illustration_3.png\"), require(\"./assets/images/avatar.png\")];\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoadingComplete: false\n    };\n\n    _this.handleResourcesAsync = function _callee() {\n      var cacheImages;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cacheImages = images.map(function (image) {\n                return Asset.fromModule(image).downloadAsync();\n              });\n              return _context.abrupt(\"return\", Promise.all(cacheImages));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n        return React.createElement(AppLoading, {\n          startAsync: this.handleResourcesAsync,\n          onError: function onError(error) {\n            return console.warn(error);\n          },\n          onFinish: function onFinish() {\n            return _this2.setState({\n              isLoadingComplete: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(Block, {\n        white: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/nicolasjameschiong/Dropbox/My Mac (Nicolass-MacBook-Pro.local)/Documents/_Personal/Development/React/FishingBuddy/App.js"],"names":["React","AppLoading","Asset","Navigation","Block","images","require","App","state","isLoadingComplete","handleResourcesAsync","cacheImages","map","image","fromModule","downloadAsync","Promise","all","props","skipLoadingScreen","error","console","warn","setState","Component","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAOC,UAAP;AACA,SAASC,KAAT;AAGA,IAAMC,MAAM,GAAG,CACbC,OAAO,2BADM,EAEbA,OAAO,6BAFM,EAGbA,OAAO,4BAHM,EAIbA,OAAO,8BAJM,EAKbA,OAAO,+BALM,EAMbA,OAAO,2BANM,EAObA,OAAO,kCAPM,EAQbA,OAAO,gCARM,EASbA,OAAO,gCATM,EAUbA,OAAO,gCAVM,EAWbA,OAAO,iCAXM,EAYbA,OAAO,iCAZM,EAabA,OAAO,iCAbM,EAcbA,OAAO,iCAdM,EAebA,OAAO,iCAfM,EAgBbA,OAAO,iCAhBM,EAiBbA,OAAO,sCAjBM,EAkBbA,OAAO,sCAlBM,EAmBbA,OAAO,sCAnBM,EAoBbA,OAAO,8BApBM,CAAf;;IAuBqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,iBAAiB,EAAE;AADb,K;;UAIRC,oB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAIfC,cAAAA,WAJe,GAIDN,MAAM,CAACO,GAAP,CAAW,UAAAC,KAAK,EAAI;AACtC,uBAAOX,KAAK,CAACY,UAAN,CAAiBD,KAAjB,EAAwBE,aAAxB,EAAP;AACD,eAFmB,CAJC;AAAA,+CAQdC,OAAO,CAACC,GAAR,CAAYN,WAAZ,CARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAWd;AAAA;;AACP,UAAI,CAAC,KAAKH,KAAL,CAAWC,iBAAZ,IAAiC,CAAC,KAAKS,KAAL,CAAWC,iBAAjD,EAAoE;AAClE,eACE,oBAAC,UAAD;AACE,UAAA,UAAU,EAAE,KAAKT,oBADnB;AAEE,UAAA,OAAO,EAAE,iBAAAU,KAAK;AAAA,mBAAIC,OAAO,CAACC,IAAR,CAAaF,KAAb,CAAJ;AAAA,WAFhB;AAGE,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACG,QAAL,CAAc;AAAEd,cAAAA,iBAAiB,EAAE;AAArB,aAAd,CAAN;AAAA,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAhC8BT,KAAK,CAACwB,S;;SAAlBjB,G;AAmCrB,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\n\nimport { AppLoading } from \"expo\";\nimport { Asset } from \"expo-asset\";\n\nimport Navigation from \"./navigation\";\nimport { Block } from \"./components\";\n\n// import all used images\nconst images = [\n  require(\"./assets/icons/back.png\"),\n  require(\"./assets/icons/plants.png\"),\n  require(\"./assets/icons/seeds.png\"),\n  require(\"./assets/icons/flowers.png\"),\n  require(\"./assets/icons/sprayers.png\"),\n  require(\"./assets/icons/pots.png\"),\n  require(\"./assets/icons/fertilizers.png\"),\n  require(\"./assets/images/plants_1.png\"),\n  require(\"./assets/images/plants_2.png\"),\n  require(\"./assets/images/plants_3.png\"),\n  require(\"./assets/images/explore_1.png\"),\n  require(\"./assets/images/explore_2.png\"),\n  require(\"./assets/images/explore_3.png\"),\n  require(\"./assets/images/explore_4.png\"),\n  require(\"./assets/images/explore_5.png\"),\n  require(\"./assets/images/explore_6.png\"),\n  require(\"./assets/images/illustration_1.png\"),\n  require(\"./assets/images/illustration_2.png\"),\n  require(\"./assets/images/illustration_3.png\"),\n  require(\"./assets/images/avatar.png\")\n];\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false\n  };\n\n  handleResourcesAsync = async () => {\n    // we're caching all the images\n    // for better performance on the app\n\n    const cacheImages = images.map(image => {\n      return Asset.fromModule(image).downloadAsync();\n    });\n\n    return Promise.all(cacheImages);\n  };\n\n  render() {\n    if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n      return (\n        <AppLoading\n          startAsync={this.handleResourcesAsync}\n          onError={error => console.warn(error)}\n          onFinish={() => this.setState({ isLoadingComplete: true })}\n        />\n      );\n    }\n\n    return (\n      <Block white>\n        <Navigation />\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}